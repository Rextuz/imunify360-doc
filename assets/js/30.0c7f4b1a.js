(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{401:function(e,t,a){"use strict";a.r(t);var s=a(32),n=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"imunify360-features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#imunify360-features","aria-hidden":"true"}},[e._v("#")]),e._v(" Imunify360 Features")]),e._v(" "),a("h2",{attrs:{id:"external-black-whitelist-management"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#external-black-whitelist-management","aria-hidden":"true"}},[e._v("#")]),e._v(" External Black/Whitelist Management")]),e._v(" "),a("p",[e._v("To use external files with the list of "),a("span",{staticClass:"notranslate"},[e._v("Black/White IPs")]),e._v(", place this list into the following directory:")]),e._v(" "),a("ul",[a("li",[e._v("for the White List:")])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/etc/imunify360/whitelist/*.txt\n")])])])]),e._v(" "),a("ul",[a("li",[e._v("for the Black List:")])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/etc/imunify360/blacklist/*.txt\n")])])])]),e._v(" "),a("p",[e._v("The files may have IP addresses or subnet in "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing",target:"_blank",rel:"noopener noreferrer"}},[e._v("CIDR notation"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("In order to apply the IP lists, run the following command:")]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("imunify360-agent reload-lists\n")])])])]),e._v(" "),a("p",[e._v("Or restart the agent.")]),e._v(" "),a("h2",{attrs:{id:"rapidscan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidscan","aria-hidden":"true"}},[e._v("#")]),e._v(" RapidScan")]),e._v(" "),a("p",[e._v("RapidScan feature allows you to increase scanning speed by lower system resource usage and gives you an opportunity to scan more frequently, further hardening your systems’ security posture.")]),e._v(" "),a("h4",{attrs:{id:"rapidscan-techniques"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidscan-techniques","aria-hidden":"true"}},[e._v("#")]),e._v(" RapidScan techniques")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Faster File Integrity Checking")]),e._v(". File metadata, such as file hashes, are stored locally. This means that unchanged files don't need to be rescanned.")]),e._v(" "),a("li",[a("strong",[e._v("Efficient Cloud-assisted Scanning")]),e._v(". Imunify360 stores its malicious file hash database in the cloud. We detect malicious files and skip white-listed files. The remaining files are fewer, so the overall scan time is significantly reduced.")]),e._v(" "),a("li",[a("strong",[e._v("Optimized Malware Signatures")]),e._v(". Our malware signature database continually expands to match the variety of malicious software. While the database becomes more accurate and comprehensive, it also becomes larger and more cumbersome to index. We tackle this by actively curating the database and re-evaluating complex signatures, recasting any that affect scanning performance.")])]),e._v(" "),a("h4",{attrs:{id:"what-does-it-mean-to-you"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-does-it-mean-to-you","aria-hidden":"true"}},[e._v("#")]),e._v(" What does it mean to you?")]),e._v(" "),a("p",[e._v("When you first enable the RapidScan feature, the first scan will run as before. But subsequent scans will see a speed improvement, anywhere between 5 to 20 times faster. This is the case for both on-demand and scheduled scans, and means you can afford more scans without affecting system performance.")]),e._v(" "),a("p",[e._v("To take advantage of these new improvements, go to your Imunify360 control panel and enable RapidScan in Settings→Malware Scanner. See details "),a("RouterLink",{attrs:{to:"/dashboard/#malware"}},[e._v("here")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"low-resource-usage-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#low-resource-usage-mode","aria-hidden":"true"}},[e._v("#")]),e._v(" Low Resource Usage mode")]),e._v(" "),a("p",[e._v("This is a special operation mode where Imunify360 consumes less CPU and RAM. It is intended for servers with limited resources.")]),e._v(" "),a("p",[e._v("This mode disables "),a("span",{staticClass:"notranslate"},[a("RouterLink",{attrs:{to:"/webshield/"}},[e._v("WebShield")])],1),e._v(" switching off GrayList and Captcha.")]),e._v(" "),a("p",[a("span",{staticClass:"notranslate"},[a("em",[e._v("Low Resource Usage")])]),e._v(" mode also enables the "),a("span",{staticClass:"notranslate"},[a("em",[a("RouterLink",{attrs:{to:"/dashboard/#waf-settings"}},[e._v("Minimized Modsec Ruleset")])],1)]),e._v(" option that disables Imunify WAF rules with a high memory footprint, leaving critical rulesets enabled.")]),e._v(" "),a("p",[e._v("When the "),a("span",{staticClass:"notranslate"},[a("em",[e._v("Low Resource Usage")])]),e._v(" mode is activated it is reflected on the UI: an Imunify main menu changes color to light green, and an appropriate label appears on the top right.")]),e._v(" "),a("p",[a("img",{attrs:{src:"/images/LowResourceUsage.png",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"exim-dovecot-brute-force-attack-protection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exim-dovecot-brute-force-attack-protection","aria-hidden":"true"}},[e._v("#")]),e._v(" Exim+Dovecot brute-force attack protection")]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),a("p",[e._v("cPanel only, other panels will be added later")])]),a("p",[e._v("Exim+Dovecot brute-force attack protection is an advanced protection against Dovecot brute-force attacks. PAM module protects against IMAP/POP3 brute-force attack and prevents mail account from being compromised via brute-forcing.")]),e._v(" "),a("p",[a("strong",[e._v("How to enable Dovecot")])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("imunify360-pam enable-dovecot\n")])])])]),e._v(" "),a("p",[a("strong",[e._v("How to disable Dovecot")])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("imunify360-pam disable-dovecot\n")])])])]),e._v(" "),a("p",[e._v("The options of the "),a("code",[e._v("pam_imunufy")]),e._v(" are placed in the file: "),a("span",{staticClass:"notranslate"},[a("code",[e._v("/etc/pam_imunify/i360.ini")])])]),e._v(" "),a("p",[a("strong",[e._v("Values")])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th"),e._v(" "),a("th")])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_LOCK_TIMEOUT=5")])])]),e._v(" "),a("td",[e._v("a period of time during which a user should be blocked (minutes)")])]),e._v(" "),a("tr",[a("td",[a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_LOCK_ATTEMPTS=10")])])]),e._v(" "),a("td",[e._v("a number of attempts after which a user should be blocked")])]),e._v(" "),a("tr",[a("td",[a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_LOCK_MINUTES=5")])])]),e._v(" "),a("td",[e._v("a period of time (minutes) during which violation attempts from a user are counted; all attempts earlier than "),a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_LOCK_MINUTES")])]),e._v(" are not counted")])]),e._v(" "),a("tr",[a("td",[a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_IP_LOCK_TIMEOUT=5")])])]),e._v(" "),a("td",[e._v("a period of time during which a user + IP should be blocked (minutes)")])]),e._v(" "),a("tr",[a("td",[a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_IP_LOCK_ATTEMPTS=10")])])]),e._v(" "),a("td",[e._v("a number of attempts after which a user + IP should be blocked")])]),e._v(" "),a("tr",[a("td",[a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_IP_LOCK_MINUTES=5")])])]),e._v(" "),a("td",[e._v("a period of time (minutes) during which violation attempts from a user + IP are counted; all attempts earlier than "),a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_IP_LOCK_MINUTES")])]),e._v(" are not counted")])]),e._v(" "),a("tr",[a("td",[a("span",{staticClass:"notranslate"},[a("code",[e._v("IP_LOCK_TIMEOUT=5")])])]),e._v(" "),a("td",[e._v("a period of time during which an IP should be blocked (minutes)")])]),e._v(" "),a("tr",[a("td",[a("span",{staticClass:"notranslate"},[a("code",[e._v("IP_LOCK_ATTEMPTS=10")])])]),e._v(" "),a("td",[e._v("a number of attempts after which an IP should be blocked")])]),e._v(" "),a("tr",[a("td",[a("span",{staticClass:"notranslate"},[a("code",[e._v("IP_LOCK_MINUTES=5")])])]),e._v(" "),a("td",[e._v("a period of time during which violation attempts from an IP are counted; all attempts earlier than "),a("span",{staticClass:"notranslate"},[a("code",[e._v("IP_LOCK_MINUTES")])]),e._v(" are not counted")])])])]),e._v(" "),a("p",[a("strong",[e._v("How to apply settings")])]),e._v(" "),a("p",[e._v("In order to apply new settings in the "),a("span",{staticClass:"notranslate"},[a("code",[e._v("/etc/pam_imunify/i360.ini")])]),e._v(", run the following command:")]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("systemctl restart imunify360-pam\n")])])])]),e._v(" "),a("h4",{attrs:{id:"how-it-works"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works","aria-hidden":"true"}},[e._v("#")]),e._v(" How it works")]),e._v(" "),a("p",[e._v("During the last "),a("span",{staticClass:"notranslate"},[a("code",[e._v("XXX_LOCK_MINUTES")])]),e._v(" we count the number of login failures (unsuccessful login attempts). If the number of attempts exceeds the specified threshold "),a("span",{staticClass:"notranslate"},[a("code",[e._v("XXX_LOCK_ATTEMPTS")])]),e._v(", the PAM plugin blocks access for "),a("span",{staticClass:"notranslate"},[a("code",[e._v("XXX_LOCK_TIMEOUT")])]),e._v(" minutes. After that, the counter is reset and the process repeats.\nNote that the plugin has three separate counters and a set of settings for USER/IP/USER+IP management regarding brute-force attacks (see the table above).")]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("Notes")]),a("ul",[a("li",[e._v("If a user is blocked by "),a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_LOCK_ATTEMPTS")])]),e._v(", then this user will not have access to the server from any IP")]),e._v(" "),a("li",[e._v("If a user is blocked by "),a("span",{staticClass:"notranslate"},[a("code",[e._v("USER_IP_LOCK_ATTEMPTS")])]),e._v(", then this user will not have access to the server from that specific IP")]),e._v(" "),a("li",[e._v("If an IP is blocked by "),a("span",{staticClass:"notranslate"},[a("code",[e._v("IP_LOCK_ATTEMPTS")])]),e._v(", then all users will not have access to the server from that specific blocked IP")])])]),a("div",{staticClass:"notranslate"},[a("h2",{attrs:{id:"hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hooks","aria-hidden":"true"}},[e._v("#")]),e._v(" Hooks")])]),e._v(" "),a("h3",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),a("p",[e._v("Hooks are introduced starting from Imunify360 version 4.2 Beta as a script-based interface for various application events. This is a simple and effective way to automate Imunify360 alerts and event processing.\nFor example, an administrator can have Imunify360 calling his own script when malicious files are detected or misconfigurations are detected and perform a custom processing or specific actions, for example, create a ticket.\nHooks are available only via CLI.")]),e._v(" "),a("h4",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements","aria-hidden":"true"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("ul",[a("li",[e._v("You can use any programming language to create a hook script")]),e._v(" "),a("li",[e._v("A hook script should be executable")]),e._v(" "),a("li",[e._v("For Native hooks, you should use Python 3.5 only")])]),e._v(" "),a("h3",{attrs:{id:"how-to-start-using-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-start-using-hooks","aria-hidden":"true"}},[e._v("#")]),e._v(" How to start using hooks")]),e._v(" "),a("p",[e._v("Start using hooks with three simple steps:")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Create a script to handle an event (a hook handler):")]),e._v(" "),a("ul",[a("li",[e._v("you can use our "),a("RouterLink",{attrs:{to:"/hooks/#structure-and-examples-of-a-hook-script"}},[e._v("scripts example")]),e._v(" as a template")],1),e._v(" "),a("li",[a("RouterLink",{attrs:{to:"/hooks/#available-events-and-their-parameters"}},[e._v("the following events are available")])],1)])]),e._v(" "),a("li",[a("p",[e._v("Register your hook handler in Imunify360 agent - use registration command:")])])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("imunify360-agent hook add --event <event name> --path </path/to/hook_script>\n")])])])]),e._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[e._v("Once the event added - check results and the "),a("RouterLink",{attrs:{to:"/hooks/#log-file"}},[e._v("log file")])],1)]),e._v(" "),a("h3",{attrs:{id:"available-events-and-their-parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#available-events-and-their-parameters","aria-hidden":"true"}},[e._v("#")]),e._v(" Available events and their parameters")]),e._v(" "),a("h4",{attrs:{id:"agent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#agent","aria-hidden":"true"}},[e._v("#")]),e._v(" agent")]),e._v(" "),a("ul",[a("li",[e._v("subtype ( started | misconfig )\n"),a("ul",[a("li",[a("p",[e._v("started - the event is generated each time the Imunify agent is started/restarted")]),e._v(" "),a("ul",[a("li",[e._v("params[]\n"),a("ul",[a("li",[e._v("version / string / version of agent")])])])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{"version": "4.6.2-2"}\n')])])])])]),e._v(" "),a("li",[a("p",[e._v("misconfig - the event is generated when the agent detects agent misconfiguration / broken settings / etc.")]),e._v(" "),a("ul",[a("li",[e._v("params[]\n"),a("ul",[a("li",[e._v("error / string / error message where / what type of misconfiguration was detected and some details")])])])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("{\n\"error\": \"ValidationError({'SMTP_BLOCKING': [{'allow_groups': ['must be of list type']}]},)\"\n}\n")])])])])])])])]),e._v(" "),a("h4",{attrs:{id:"malware-scanning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#malware-scanning","aria-hidden":"true"}},[e._v("#")]),e._v(" malware-scanning")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("subtype ( started | finished )")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[e._v("started")]),e._v(" - the event is generated when the malware scanning process is started (for on-demand and background scans only, yet not the ftp / waf / inotify)")]),e._v(" "),a("ul",[a("li",[e._v("params[]\n"),a("ul",[a("li",[e._v("scan_id / string / identifier of running scan")]),e._v(" "),a("li",[e._v("path / string / path that’s scanning")]),e._v(" "),a("li",[e._v("type / string / type of scanning (“on-demand”, “background”, “ftp”, “rescan“)")]),e._v(" "),a("li",[e._v("scan_params[]  / initial scanning params\n"),a("ul",[a("li",[e._v("file_mask / string / file mask to scan")]),e._v(" "),a("li",[e._v("follow_symlinks / boolean / shall scanner follow symlinks")]),e._v(" "),a("li",[e._v("ignore_mask / string / file mask to ignore")]),e._v(" "),a("li",[e._v("intensity / string / intensity type selected (“low”, “moderate”,  “high”)")])])])])])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n"scan_id": "dc3c6061c572410a83be19d153809df1",\n"home": "/home/a/abdhf/",\n"user": "abdhf",\n"type": "background",\n"scan_params": {"file_mask": "*", "follow_symlinks": true, "ignore_mask": "", "intensity": "low"}\n}\n')])])])])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("finished")]),e._v(" - the event is generated when the malware scanning process is finished (for on-demand and background scans only, yet not the ftp / waf / inotify)")]),e._v(" "),a("ul",[a("li",[e._v("params[]\n"),a("ul",[a("li",[e._v("scan_id / string / identifier of running scan")]),e._v(" "),a("li",[e._v("path / string / path that’s scanned")]),e._v(" "),a("li",[e._v("users[] / string array/ user that’s scanned")]),e._v(" "),a("li",[e._v("started / int / unixtime when scan started")]),e._v(" "),a("li",[e._v("total_files / int / total number of files that were scanned")]),e._v(" "),a("li",[e._v("total_malicious / int / number of detected malicious files")]),e._v(" "),a("li",[e._v("errors[] / string / error message if any occurred during scanning")]),e._v(" "),a("li",[e._v("status / string / status of scan (“ok”, “has_errors”, “failed”)")]),e._v(" "),a("li",[e._v("scan_params[] / initial scanning params\n"),a("ul",[a("li",[e._v("file_mask / string / file mask to scan")]),e._v(" "),a("li",[e._v("follow_symlinks / boolean / shall scanner follow symlinks")]),e._v(" "),a("li",[e._v("ignore_mask / string / file mask to ignore")]),e._v(" "),a("li",[e._v("intensity / string / intensity type selected (“low”, “moderate”,  “high”)")])])])])])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n"scan_id": "dc3c6061c572410a83be19d153809df1",\n"home": "/home/a/abdhf/",\n"user": "abdhf",\n"started": 1587365282,\n"total_files": 873535,\n"total_malicious": 345,\n"errors": [],\n"status": "ok",\n"type": "background",\n"scan_params": {"file_mask": "*", "follow_symlinks": true, "ignore_mask": "", "intensity": "low"}\n}\n')])])])])])])])]),e._v(" "),a("h4",{attrs:{id:"malware-detected"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#malware-detected","aria-hidden":"true"}},[e._v("#")]),e._v(" malware-detected")]),e._v(" "),a("ul",[a("li",[e._v("subtype ( critical )\n"),a("ul",[a("li",[a("p",[a("strong",[e._v("critical")])]),e._v(" "),a("ul",[a("li",[e._v("params[]\n"),a("ul",[a("li",[e._v("scan_id / string / unique id of the scan")]),e._v(" "),a("li",[e._v("errors[] / string / error strings that happened during the last scan")]),e._v(" "),a("li",[e._v("started / int / unixtime when the scan was started")]),e._v(" "),a("li",[e._v("path / string / path that was scanned")]),e._v(" "),a("li",[e._v("users[] / string array / users that have been scanned (if any)")]),e._v(" "),a("li",[e._v("total_files / int / number of files checked within the last scanning")]),e._v(" "),a("li",[e._v("total_malicious / int / number of detected malicious files")]),e._v(" "),a("li",[e._v("tmp_filename / string / path to a temporary file with a list of detected threads. The list of threads is in the format of the following command: "),a("span",{staticClass:"notranslate"},[a("code",[e._v("imunify360-agent malware malicious list --by-scan-id=... --json")])])])])])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n"scan_id": "dc3c6061c572410a83be19d153809df1",\n"path": "/home/a/abdhf/",\n"username": ["imunify"],\n"started": 1587365282,\n"total_files": 873535,\n"total_malicious": 345,\n"errors": [],\n"files": [\n    {\n      "username": "imunify",\n      "hash": "17c1dd3659578126a32701bb5eaccecc2a6d8307d8e392f5381b7273bfb8a89d",\n      "size": "182",\n      "cleaned_at": 1553762878.6882641,\n      "extra_data": {\n\n\n      },\n      "malicious": true,\n      "id": 32,\n      "status": "cleanup_removed",\n      "file": "/home/imunify/public_html/01102018_2.php",\n      "type": "SMW-INJ-04174-bkdr",\n      "scan_type": "on-demand",\n      "Created": 1553002672\n    },\n    {\n      "username": "imunify",\n      "hash": "04425f71ae6c3cd04f8a7f156aee57096dd658ce6321c92619a07e122d33bd32",\n      "size": "12523",\n      "cleaned_at": 1553762878.6882641,\n      "extra_data": {\n\n\n      },\n      "malicious": true,\n      "id": 33,\n      "status": "cleanup_done",\n      "file": "/home/imunify/public_html/22.js",\n      "type": "SMW-INJ-04346-js.inj",\n      "scan_type": "on-demand",\n      "Created": 1553002672\n    },\n...\n\n}\n')])])])])])])])]),e._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("Note")]),a("p",[e._v("All results can be saved in a temporary file before handler invocation and then remove the file after the event is being processed")])]),a("h4",{attrs:{id:"malware-cleanup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#malware-cleanup","aria-hidden":"true"}},[e._v("#")]),e._v(" malware-cleanup")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("subtype ( started | finished )")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[e._v("started")]),e._v(" - the event is generated when the malware cleanup process is started (for on-demand and background cleanup only, background auto-cleanup will be implemented later)")]),e._v(" "),a("ul",[a("li",[e._v("params[]\n"),a("ul",[a("li",[e._v("cleanup_id / string / unique id of the cleanup")]),e._v(" "),a("li",[e._v("started / int / unixtime when the cleanup was started")]),e._v(" "),a("li",[e._v("tmp_filename / string / path to a temporary file with a scanning report. The list is in the format of the following command: "),a("span",{staticClass:"notranslate"},[a("code",[e._v("imunify360-agent malware malicious list --by-scan-id=... --json")])]),e._v(". See malware-detected hook section for details.")]),e._v(" "),a("li",[e._v("total_files / int / number of files that were sent for cleanup")])])])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n"scan_id": "dc3c6061c572410a83be19d153809df1",\n"started": 1587365282,\n"total_files": 873535,\n"total_cleaned": 872835,\n"tmp_filename": "/var/imunify/tmp/hooks/tmp_02q648234692834698456728439587245.json",\n"errors": [],\n"status": "ok"\n}\n')])])])])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("finished")]),e._v(" - the event is generated when the malware scanning process is finished (for on-demand and background cleanup only, background auto-cleanup will be implemented later)")]),e._v(" "),a("ul",[a("li",[e._v("params[]\n"),a("ul",[a("li",[e._v("cleanup_id / string / identifier of running cleanup")]),e._v(" "),a("li",[e._v("started / int / unixtime when cleanup started")]),e._v(" "),a("li",[e._v("total_files / int / number of files that were sent for cleanup")]),e._v(" "),a("li",[e._v("total_cleaned / int / number of files that were successfully cleaned")]),e._v(" "),a("li",[e._v("tmp_filename / string / path to a temporary file with a list of results.")]),e._v(" "),a("li",[e._v("errors[] / string / error messages if any occurred during cleanup")]),e._v(" "),a("li",[e._v("errors[] / string / error messages if any occurred during cleanup")])])])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n"scan_id": "dc3c6061c572410a83be19d153809df1",\n"started": 1587365282,\n"total_files": 873535,\n"total_cleaned": 872835,\n"tmp_filename": "/var/imunify/tmp/hooks/tmp_02q648234692834698456728439587245.json",\n"errors": [],\n"status": "ok"\n}\n')])])])])])])])]),e._v(" "),a("h4",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[e._v("#")]),e._v(" license")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("subtype ( expiring | expired | renewed )")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("expiring")]),e._v(" - the event is generated when license is about to expire, the even should be sent 3 days prior to expiration\n"),a("ul",[a("li",[a("p",[e._v("params[]")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("exp_time")]),e._v(" / int / unixtime data when the license expired")])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{"exp_time": 1587365282}\n')])])])])])])]),e._v(" "),a("li",[a("strong",[e._v("expired")]),e._v(" - the event is generated when license has expired\n"),a("ul",[a("li",[a("p",[e._v("params[]")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("exp_time")]),e._v(" / int / unixtime data when the license is expired")])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{"exp_time": 1587365282}\n')])])])])])])]),e._v(" "),a("li",[a("strong",[e._v("renewed")]),e._v(" - the event is generated when the license is updated (renewed)\n"),a("ul",[a("li",[a("p",[e._v("params[]")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("exp_time")]),e._v(" / int / unixtime data when the license will expire")]),e._v(" "),a("li",[a("strong",[e._v("license")]),e._v(" / string / license type")])]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "exp_time": 1587365282,\n  "license": "imunify360"\n}\n')])])])])])])])])])]),e._v(" "),a("h3",{attrs:{id:"cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cli","aria-hidden":"true"}},[e._v("#")]),e._v(" CLI")]),e._v(" "),a("p",[e._v("The following CLI command is used to manage hooks:")]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("imunify360-agent hook [command] --event [event_name|all] [--path </path/to/hook_script>]\n")])])])]),e._v(" "),a("p",[e._v("The following commands are supported:")]),e._v(" "),a("ul",[a("li",[a("span",{staticClass:"notranslate"},[a("strong",[e._v("add")])]),e._v(" - register a new event handler")]),e._v(" "),a("li",[a("span",{staticClass:"notranslate"},[a("strong",[e._v("delete")])]),e._v(" - unregister existing event handler")]),e._v(" "),a("li",[a("span",{staticClass:"notranslate"},[a("strong",[e._v("list")])]),e._v(" - show existing event handlers")]),e._v(" "),a("li",[a("span",{staticClass:"notranslate"},[a("strong",[e._v("add-native")])]),e._v(" - register a new native event handler")])]),e._v(" "),a("p",[e._v("The third parameter "),a("span",{staticClass:"notranslate"},[a("em",[e._v("event_name")])]),e._v(" defines a particular event that invokes a registered handler as opposed to "),a("span",{staticClass:"notranslate"},[a("strong",[e._v("all")])]),e._v(" keyword.\nThe fourth parameter "),a("code",[e._v("/path/to/hook_script")]),e._v(" shall contain a valid path to a handler of the event, it shall be any executable or Python Native event handlers that agent will run upon a registered event.")]),e._v(" "),a("h3",{attrs:{id:"native"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#native","aria-hidden":"true"}},[e._v("#")]),e._v(" Native")]),e._v(" "),a("p",[e._v("Native hook is a script written on Python 3.5 and allows to quickly process events. The Python file should contain only one method that customer would implement:")]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("def im_hook(dict_param):\n  …\n  pass\n")])])])]),e._v(" "),a("p",[e._v("where "),a("code",[e._v("dict_param")]),e._v(" would hold the same data as JSON that non-Native hook would get.")]),e._v(" "),a("h3",{attrs:{id:"log-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log-file","aria-hidden":"true"}},[e._v("#")]),e._v(" Log File")]),e._v(" "),a("p",[e._v("You can see all hook data in the log file. It is located at "),a("span",{staticClass:"notranslate"},[a("em",[e._v("/var/log/imunify360/hook.log")])]),e._v(" .\nWhen the event comes, the data is recorded to the log file in the following format:")]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("timestamp event : id : started [native:] name :  subtype : script_path\n")])])])]),e._v(" "),a("ul",[a("li",[a("span",{staticClass:"notranslate"},[a("strong",[e._v("native")])]),e._v(" is prepended for the Native hook implementation")]),e._v(" "),a("li",[a("span",{staticClass:"notranslate"},[a("strong",[e._v("id")])]),e._v(" is a unique ID for each event")])]),e._v(" "),a("p",[e._v("Once the listener is done, the data is recorded to the log file in the following format:")]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("timestamp event : id : done [native:] script_path [OK|ERROR:code]\n")])])])]),e._v(" "),a("p",[e._v("In case of an error, you can see the error code you have specified.")]),e._v(" "),a("h3",{attrs:{id:"structure-and-examples-of-a-hook-script"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structure-and-examples-of-a-hook-script","aria-hidden":"true"}},[e._v("#")]),e._v(" Structure and examples of a hook script")]),e._v(" "),a("p",[e._v("Regular (non-native) hook:")]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("#!/bin/bash\n\ndata=$(cat)\n\nevent=$(jq -r '.event' <<< ${data})\nsubtype=$(jq -r '.subtype' <<< ${data})\n\ncase ${event} in\n    malware-scanning)\n        case ${subtype} in\n            started)\n                # do stuff here\n            ;;\n            *)\n                echo \"Unhandled subtype: ${subtype}\" 1>&2\n                exit 1\n        esac\n        ;;\n    *)\n        echo \"Unhandled event: ${event}/${subtype}\" 1>&2\n        exit 2\nesac\n")])])])]),e._v(" "),a("p",[e._v("Native hook:")]),e._v(" "),a("div",{staticClass:"notranslate"},[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("def im_hook(dict_param):\n   event = dict_param['event']\n   subtype = dict_param['subtype']\n\n   if event == 'malware-scanning':\n       if subtype == 'started':\n           # do stuff here\n           pass\n       elif subtype == 'finished':\n           # do other stuff here\n           pass\n       else:\n           raise Exception('Unhandled subtype {}'.format(subtype))\n   else:\n       raise Exception('Unhandled event {}'.format(event))\n")])])])]),e._v(" "),a("Disqus")],1)},[],!1,null,null,null);t.default=n.exports}}]);